version: 2.1

orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

jobs:
  #####
  #win
  #######
  buildWin: # name of your job
    executor: 
      name: win/default # executor type# Windows machine image
      shell: bash.exe #ASIOSDK: C:\projects\ASIOSDK2.3
    steps:
      # Commands are run in a Windows virtual machine environment
        - run: git clone --recurse-submodules -j8 https://github.com/OrganicOrchestra/LGML.git .
        - run: echo 'Hello, Windows'
  #######
# ubuntu14
#########
  buildu14:
    working_directory: ~/LGML
    docker:
      - image: ubuntu:14.04
        environment:
          ARCH_FLAGS: -m64 # arch for linux makefile
          DST_LGML_PATH: /tmp/build
    steps:
      - run:
          name: install git
          command: |
            apt-get -qq update
            apt-get install -y git
      - checkout
      - run:
          name: install LGML dependencies
          command: |
            git submodule update --init --recursive
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh

      - run:
          name: build and package LGML
          command: |
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --packagesuffix=ubuntu14 --configure --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release
            python3 Scripts/buildScript.py --build --package --export
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build/
#######
# ubuntu16
#########
  buildu16:
    working_directory: ~/LGML
    docker:
      - image: ubuntu:16.04
        environment:
          ARCH_FLAGS: -m64 # arch for linux makefile
          DST_LGML_PATH: /tmp/build
    steps:
      - run:
          name: install git
          command: |
            apt-get -qq update
            apt-get install -y git
      - checkout
      - run:
          name: install LGML dependencies
          command: |
            git submodule update --init --recursive
            sh Scripts/linux/installDeps.sh && sh Scripts/linux/installDevDeps.sh

      - run:
          name: build and package LGML
          command: |
            pip3 install -U pip
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --packagesuffix=ubuntu16 --configure --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release --build --package --export
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build/


  build32:
    working_directory: ~/LGML
    docker:
      - image: ubuntu:16.04
        environment:
          PKG_CONFIG_PATH: /usr/lib/i386-linux-gnu/pkgconfig/
          CROSS_ARCH: i386
          ARCH_FLAGS: -m32 # arch for JUCEs linux makefile
          DST_LGML_PATH: /tmp/build32

    steps:
      - run:
          name: install git
          command: |
            apt-get -qq update
            apt-get install -y git
      - checkout
      - run:
          name: install LGML32 dependencies
          command: |
            git submodule update --init --recursive
            apt-get install -y pkg-config gcc-multilib g++-multilib
            sh Scripts/linux/installDevDeps.sh && sh Scripts/linux/installDeps.sh

      - run:
          name: build and package LGML32
          command: |
            pip3 install -U pip
            sh Scripts/linux/installExportDeps.sh
            python3 Scripts/buildScript.py --configure --packagesuffix=ubuntu16 --exportpath="$DST_LGML_PATH" --os=linux --configuration=Release --build --package --export
            ldd /root/LGML/Builds/LinuxMakefile/build/LGML > "$DST_LGML_PATH/dependencies.txt"
      - store_artifacts:
          path: /tmp/build32 #$DST_LGML_PATH

###############
# build Rasp 2/3
##############

  build_rasp:
    working_directory: ~/LGML
    docker:
      - image: ubuntu
        environment:
          CROSS_ARCH: armhf
          ARCH_FLAGS_PI3: -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard # -ffast-math # arch flags for JUCEMakefile -> RPI3
          ARCH_FLAGS_PI4:  -mcpu=cortex-a72 -mtune=cortex-a72 -mfpu=neon-fp-armv8 -mfloat-abi=hard
          DST_LGML_PATH: /tmp/buildRasp
          PKG_CONFIG_PATH: /usr/lib/arm-linux-gnueabihf/pkgconfig
          BUILDLGML_CMD_BASE: python3 Scripts/buildScript.py --configure --exportpath=/tmp/buildRasp/ --os=linux --build --package --export

    steps:
      - run:
          name: install git
          command: |
            apt-get -qq update
            apt-get install -y git
      - checkout
      - run:
          name: install LGMLRasp dependencies
          command: |
            set -x
            apt-get install -y g++-5-arm-linux-gnueabihf pkg-config
            . /etc/lsb-release
            echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports $DISTRIB_CODENAME main universe" >> /etc/apt/sources.list
            echo "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports $DISTRIB_CODENAME-updates main universe" >> /etc/apt/sources.list
            apt-get install -y git
            git submodule update --init --recursive
            export CXX=arm-linux-gnueabihf-g++-5
            export CC=arm-linux-gnueabihf-gcc-5
            sh Scripts/linux/installDevDeps.sh
            

      - run:
          name: build and package LGMLRasp
          command: |
            pip3 install -U pip
            set -x
            export CXX=arm-linux-gnueabihf-g++-5
            sh Scripts/linux/installExportDeps.sh
            export ARCH_FLAGS=$ARCH_FLAGS_PI4
            $BUILDLGML_CMD_BASE --configuration=Release --packagesuffix=Rpi4
            arm-linux-gnueabihf-objdump -x ~/LGML/Builds/LinuxMakefile/build/LGML | grep NEEDED > "$DST_LGML_PATH/dependenciesRpi4.txt"
            python3 Scripts/buildScript.py --clean
            export ARCH_FLAGS=$ARCH_FLAGS_PI3
            $BUILDLGML_CMD_BASE --configuration=Release --packagesuffix=Rpi3
            arm-linux-gnueabihf-objdump -x ~/LGML/Builds/LinuxMakefile/build/LGML | grep NEEDED > "$DST_LGML_PATH/dependenciesRpi3.txt"
            python3 Scripts/buildScript.py --clean

      - store_artifacts:
          path: /tmp/buildRasp/




  buildOSX:
    working_directory: ~/LGML
    macos:
      xcode: "11.0.0"
    steps:
      - checkout
      - run:
          name: install LGML OSX dependencies
          command: |
            git submodule update --init --recursive
            sh Scripts/osx/installDevDeps.sh 
            sh Scripts/osx/installExportDeps.sh
            
      - run:
          name: build and package LGML OSX
          command: |
            python3 Scripts/buildScript.py --configure --exportpath=/tmp/buildOSX/64Beta/ --os=osx --configuration=Beta --arch=x86_64
            python3 Scripts/buildScript.py --build --package --export
            python3 Scripts/buildScript.py --configure --exportpath=/tmp/buildOSX/64/ --os=osx --configuration=Release --arch=x86_64
            python3 Scripts/buildScript.py --build --package --export
            
            
      - store_artifacts:
          path: /tmp/buildOSX #$DST_LGML_PATH


workflows:
  version: 2
  build_all_platforms:
    jobs:
      - buildOSX
      - build_rasp
      - buildu16
      - build32
      - buildWin



general:
  branches:
    only:
      - master
      - ci/all
      - ci/circleci
